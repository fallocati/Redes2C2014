%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 1011 757
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, September 21, 2014 1:53:55 PM ART
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
1011 757 setpagesize
0 0 0 0 setmargins
0 0 setorigin
1011 757 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1011.00 0.00000 l
1011.00 757.000 l
0.00000 757.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1011 757 rc
q
[ .913168 0.00000 0.00000 .913168 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -3966.00 -1688.00 ] concat
1.00000 1.00000 1.00000 RG
newpath
3966.00 1688.00 m
5074.00 1688.00 l
5074.00 2517.00 l
3966.00 2517.00 l
3966.00 1688.00 l
h
f
0.00000 0.00000 0.00000 RG
[ .913168 0.00000 0.00000 .913168 -3621.62 -1541.43 ] defaultmatrix matrix concatmatrix setmatrix
[ .913168 0.00000 0.00000 .913168 -3621.62 -1541.43 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ .913168 0.00000 0.00000 .913168 -3621.62 -1541.43 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 0.00000 1.00000 RG
newpath
4684.11 2146.71 m
4684.11 2187.88 4614.62 2221.25 4528.91 2221.25  c
4443.19 2221.25 4373.71 2187.88 4373.71 2146.71  c
4373.71 2105.54 4443.19 2072.17 4528.91 2072.17  c
4614.62 2072.17 4684.11 2105.54 4684.11 2146.71  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
4423.86 2122.21 m
4448.64 2122.21 l
4448.64 2127.52 l
4429.64 2127.52 l
4429.64 2138.96 l
4430.56 2138.65 4431.47 2138.41 4432.39 2138.26  c
4433.31 2138.10 4434.22 2138.02 4435.14 2138.02  c
4440.35 2138.02 4444.47 2139.45 4447.52 2142.31  c
4450.56 2145.16 4452.08 2149.02 4452.08 2153.90  c
4452.08 2158.92 4450.52 2162.82 4447.39 2165.60  c
4444.27 2168.38 4439.86 2169.77 4434.17 2169.77  c
4432.21 2169.77 4430.22 2169.61 4428.19 2169.27  c
4426.16 2168.94 4424.06 2168.44 4421.89 2167.77  c
4421.89 2161.43 l
4423.77 2162.45 4425.70 2163.21 4427.70 2163.71  c
4429.70 2164.21 4431.82 2164.46 4434.05 2164.46  c
4437.65 2164.46 4440.51 2163.51 4442.61 2161.62  c
4444.71 2159.72 4445.77 2157.15 4445.77 2153.90  c
4445.77 2150.65 4444.71 2148.08 4442.61 2146.18  c
4440.51 2144.28 4437.65 2143.34 4434.05 2143.34  c
4432.36 2143.34 4430.68 2143.52 4429.00 2143.90  c
4427.32 2144.27 4425.61 2144.86 4423.86 2145.65  c
4423.86 2122.21 l
h
4464.52 2160.93 m
4471.11 2160.93 l
4471.11 2168.87 l
4464.52 2168.87 l
4464.52 2160.93 l
h
4498.36 2126.37 m
4495.11 2126.37 4492.67 2127.97 4491.03 2131.16  c
4489.40 2134.36 4488.58 2139.17 4488.58 2145.59  c
4488.58 2151.98 4489.40 2156.78 4491.03 2159.98  c
4492.67 2163.18 4495.11 2164.77 4498.36 2164.77  c
4501.63 2164.77 4504.08 2163.18 4505.72 2159.98  c
4507.35 2156.78 4508.17 2151.98 4508.17 2145.59  c
4508.17 2139.17 4507.35 2134.36 4505.72 2131.16  c
4504.08 2127.97 4501.63 2126.37 4498.36 2126.37  c
h
4498.36 2121.37 m
4503.59 2121.37 4507.58 2123.44 4510.34 2127.57  c
4513.10 2131.71 4514.48 2137.71 4514.48 2145.59  c
4514.48 2153.44 4513.10 2159.44 4510.34 2163.57  c
4507.58 2167.71 4503.59 2169.77 4498.36 2169.77  c
4493.13 2169.77 4489.14 2167.71 4486.38 2163.57  c
4483.62 2159.44 4482.23 2153.44 4482.23 2145.59  c
4482.23 2137.71 4483.62 2131.71 4486.38 2127.57  c
4489.14 2123.44 4493.13 2121.37 4498.36 2121.37  c
h
4525.58 2160.93 m
4532.17 2160.93 l
4532.17 2168.87 l
4525.58 2168.87 l
4525.58 2160.93 l
h
4559.42 2126.37 m
4556.17 2126.37 4553.73 2127.97 4552.09 2131.16  c
4550.46 2134.36 4549.64 2139.17 4549.64 2145.59  c
4549.64 2151.98 4550.46 2156.78 4552.09 2159.98  c
4553.73 2163.18 4556.17 2164.77 4559.42 2164.77  c
4562.69 2164.77 4565.15 2163.18 4566.78 2159.98  c
4568.42 2156.78 4569.23 2151.98 4569.23 2145.59  c
4569.23 2139.17 4568.42 2134.36 4566.78 2131.16  c
4565.15 2127.97 4562.69 2126.37 4559.42 2126.37  c
h
4559.42 2121.37 m
4564.65 2121.37 4568.65 2123.44 4571.41 2127.57  c
4574.17 2131.71 4575.55 2137.71 4575.55 2145.59  c
4575.55 2153.44 4574.17 2159.44 4571.41 2163.57  c
4568.65 2167.71 4564.65 2169.77 4559.42 2169.77  c
4554.19 2169.77 4550.20 2167.71 4547.44 2163.57  c
4544.68 2159.44 4543.30 2153.44 4543.30 2145.59  c
4543.30 2137.71 4544.68 2131.71 4547.44 2127.57  c
4550.20 2123.44 4554.19 2121.37 4559.42 2121.37  c
h
4586.64 2160.93 m
4593.23 2160.93 l
4593.23 2168.87 l
4586.64 2168.87 l
4586.64 2160.93 l
h
4608.08 2163.56 m
4618.39 2163.56 l
4618.39 2127.96 l
4607.17 2130.21 l
4607.17 2124.46 l
4618.33 2122.21 l
4624.64 2122.21 l
4624.64 2163.56 l
4634.95 2163.56 l
4634.95 2168.87 l
4608.08 2168.87 l
4608.08 2163.56 l
h
f
2 J
10.0000 M
1.00000 0.00000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
4684.11 2146.71 m
4684.11 2187.88 4614.62 2221.25 4528.91 2221.25  c
4443.19 2221.25 4373.71 2187.88 4373.71 2146.71  c
4373.71 2105.54 4443.19 2072.17 4528.91 2072.17  c
4614.62 2072.17 4684.11 2105.54 4684.11 2146.71  c
h
S
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4468.89 2215.45 m
2619.00 4334.26 l
S
newpath
2613.74 4340.28 m
2625.39 4334.53 l
2619.65 4333.51 l
2617.86 4327.96 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
348.201 4202.61 m
4413.29 2203.57 l
S
newpath
4420.47 2200.04 m
4407.49 2200.85 l
4412.39 2204.01 l
4411.90 2209.82 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4381.19 2169.58 m
1428.24 2626.70 l
S
newpath
1420.34 2627.92 m
1432.96 2631.03 l
1429.23 2626.55 l
1431.43 2621.15 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
4.00000 w
0 J
1.45000 M
newpath
1850.07 4151.96 m
4436.29 2216.04 l
S
newpath
4445.10 2209.45 m
4427.77 2213.83 l
4435.19 2216.86 l
4436.01 2224.84 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4407.85 2193.38 m
292.681 3465.92 l
S
newpath
285.038 3468.28 m
297.979 3469.51 l
293.636 3465.62 l
295.025 3459.96 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
267.434 3463.08 m
4382.73 2182.70 l
S
newpath
4390.37 2180.33 m
4377.43 2179.12 l
4381.78 2183.00 l
4380.40 2188.66 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4439.67 2207.72 m
1954.61 3635.65 l
S
newpath
1947.67 3639.64 m
1960.57 3638.00 l
1955.48 3635.16 l
1955.59 3629.33 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
1931.99 3637.14 m
4415.13 2204.81 l
S
newpath
4422.06 2200.82 m
4409.17 2202.48 l
4414.27 2205.31 l
4414.17 2211.14 l
h
f
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4417.44 2198.58 m
1981.71 3331.96 l
S
newpath
1971.74 3336.60 m
1989.60 3335.87 l
1982.96 3331.38 l
1983.80 3323.40 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
4500.12 2219.96 m
3665.36 4343.92 l
S
newpath
3662.43 4351.37 m
3671.47 4342.03 l
3665.72 4342.99 l
3662.17 4338.37 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
331.044 3757.71 m
4400.19 2196.11 l
S
newpath
4407.66 2193.24 m
4394.66 2192.87 l
4399.26 2196.47 l
4398.25 2202.21 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4436.43 2206.58 m
1829.80 3893.94 l
S
newpath
1823.09 3898.29 m
1835.88 3895.97 l
1830.64 3893.40 l
1830.45 3887.57 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4540.29 2221.02 m
4662.34 4162.64 l
S
newpath
4662.84 4170.63 m
4667.08 4158.34 l
4662.28 4161.64 l
4657.10 4158.96 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
2.00000 w
0 J
1.45000 M
newpath
4652.75 4170.70 m
4527.58 2230.22 l
S
newpath
4527.00 2221.23 m
4522.26 2235.07 l
4527.65 2231.34 l
4533.48 2234.34 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4379.55 2166.97 m
905.013 2638.27 l
S
newpath
897.085 2639.34 m
909.648 2642.69 l
906.003 2638.13 l
908.304 2632.78 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4526.82 2221.26 m
4279.24 4307.47 l
S
newpath
4278.30 4315.41 m
4284.68 4304.09 l
4279.36 4306.48 l
4274.75 4302.91 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
2.00000 w
0 J
1.45000 M
newpath
4268.19 4315.30 m
4512.45 2229.81 l
S
newpath
4513.50 2220.87 m
4506.34 2233.62 l
4512.32 2230.92 l
4517.51 2234.93 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
5436.60 3910.25 m
4570.27 2227.08 l
S
newpath
4566.15 2219.07 m
4567.33 2233.65 l
4570.78 2228.08 l
4577.33 2228.50 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4378.29 2164.69 m
570.477 2619.33 l
S
newpath
562.533 2620.28 m
575.042 2623.82 l
571.470 2619.21 l
573.856 2613.89 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
2.00000 w
0 J
1.45000 M
newpath
4542.85 2220.95 m
4898.74 4116.40 l
S
newpath
4900.40 4125.24 m
4903.44 4110.93 l
4898.53 4115.29 l
4892.38 4113.01 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
4551.53 2220.46 m
5114.67 4055.71 l
S
newpath
5117.01 4063.35 m
5118.27 4050.41 l
5114.37 4054.75 l
5108.71 4053.35 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4560.06 2219.74 m
5310.92 3979.89 l
S
newpath
5314.06 3987.25 m
5313.95 3974.25 l
5310.53 3978.97 l
5304.76 3978.18 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4572.53 2218.25 m
5563.93 3843.82 l
S
newpath
5568.10 3850.65 m
5566.12 3837.80 l
5563.41 3842.96 l
5557.58 3843.01 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4428.35 2203.49 m
632.232 4346.96 l
S
newpath
625.265 4350.89 m
638.173 4349.35 l
633.102 4346.47 l
633.257 4340.64 l
h
f
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4483.88 2218.05 m
3414.35 3912.36 l
S
newpath
3408.47 3921.66 m
3423.10 3911.38 l
3415.08 3911.20 l
3411.47 3904.04 l
h
f
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4549.62 2072.84 m
5082.61 171.960 l
S
newpath
5085.58 161.368 m
5074.50 175.399 l
5082.23 173.284 l
5087.74 179.112 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4438.98 2207.47 m
1651.53 4090.78 l
S
newpath
1644.90 4095.26 m
1657.64 4092.68 l
1652.36 4090.22 l
1652.04 4084.40 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4381.45 2169.96 m
647.584 2758.77 l
S
newpath
639.682 2760.02 m
652.314 2763.09 l
648.572 2758.62 l
650.756 2753.21 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4593.85 2214.41 m
5889.41 3565.10 l
S
newpath
5894.94 3570.87 m
5890.25 3558.75 l
5888.71 3564.38 l
5883.03 3565.67 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4446.65 2209.92 m
2781.10 3489.90 l
S
newpath
2774.76 3494.78 m
2787.32 3491.43 l
2781.89 3489.30 l
2781.23 3483.50 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4413.32 2196.45 m
1904.43 3074.48 l
S
newpath
1896.88 3077.12 m
1909.86 3077.88 l
1905.38 3074.15 l
1906.56 3068.44 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
1878.04 3073.20 m
4389.80 2188.88 l
S
newpath
4397.35 2186.23 m
4384.37 2185.49 l
4388.86 2189.21 l
4387.69 2194.93 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
4.00000 w
0 J
1.45000 M
newpath
4479.47 2217.37 m
3167.19 4092.96 l
S
newpath
3160.89 4101.97 m
3175.98 4092.40 l
3167.98 4091.83 l
3164.71 4084.51 l
h
f
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4561.52 2073.84 m
5363.16 282.762 l
S
newpath
5367.65 272.722 m
5354.64 284.973 l
5362.60 284.017 l
5367.19 290.591 l
h
f
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4586.33 2215.96 m
5792.35 3670.53 l
S
newpath
5799.37 3679.00 m
5794.13 3661.91 l
5791.47 3669.47 l
5783.54 3670.69 l
h
f
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
4601.86 2212.50 m
5994.44 3468.46 l
S
newpath
6002.61 3475.82 m
5994.96 3459.67 l
5993.42 3467.53 l
5985.75 3469.88 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4462.72 2214.13 m
2920.92 3784.66 l
S
newpath
2915.32 3790.37 m
2927.29 3785.31 l
2921.62 3783.95 l
2920.15 3778.31 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4500.21 2219.97 m
3728.41 4190.27 l
S
newpath
3725.50 4197.72 m
3734.53 4188.37 l
3728.78 4189.34 l
3725.22 4184.72 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4508.27 2072.83 m
4141.25 101.305 l
S
newpath
4139.79 93.4403 m
4137.07 106.153 l
4141.43 102.288 l
4146.90 104.322 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4149.97 93.3074 m
4520.23 2064.37 l
S
newpath
4521.71 2072.23 m
4524.40 2059.52 l
4520.04 2063.39 l
4514.58 2061.36 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4393.39 2183.05 m
1774.62 2885.19 l
S
newpath
1766.89 2887.26 m
1779.78 2888.98 l
1775.59 2884.93 l
1777.19 2879.32 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4471.62 2215.99 m
2979.35 4020.79 l
S
newpath
2974.25 4026.96 m
2985.75 4020.89 l
2979.99 4020.02 l
2978.05 4014.52 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4442.30 2208.57 m
789.716 4404.36 l
S
newpath
782.859 4408.48 m
795.720 4406.59 l
790.573 4403.85 l
790.568 4398.02 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
767.577 4406.04 m
4417.77 2206.02 l
S
newpath
4424.62 2201.89 m
4411.76 2203.80 l
4416.91 2206.53 l
4416.92 2212.37 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4461.89 2213.95 m
2562.56 4119.40 l
S
newpath
2556.92 4125.06 m
2568.93 4120.09 l
2563.27 4118.69 l
2561.85 4113.04 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4470.39 2215.75 m
2790.29 4197.87 l
S
newpath
2785.11 4203.97 m
2796.69 4198.05 l
2790.93 4197.10 l
2789.06 4191.58 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
4620.49 2206.89 m
6173.40 3227.32 l
S
newpath
6180.92 3232.26 m
6172.73 3220.15 l
6172.46 3226.70 l
6166.55 3229.55 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
4683.86 2142.51 m
6445.29 2094.79 l
S
newpath
6453.29 2094.57 m
6441.16 2089.90 l
6444.29 2094.81 l
6441.43 2099.89 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
4641.30 2198.11 m
6308.55 2960.58 l
S
newpath
6316.74 2964.32 m
6306.80 2953.59 l
6307.53 2960.11 l
6302.12 2963.82 l
h
f
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4384.78 2174.36 m
465.901 2926.13 l
S
newpath
458.044 2927.64 m
470.771 2930.29 l
466.883 2925.94 l
468.887 2920.47 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4671.83 2175.77 m
6422.91 2531.74 l
S
newpath
6430.75 2533.34 m
6419.98 2526.05 l
6421.93 2531.55 l
6417.99 2535.85 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4392.58 2111.08 m
2578.04 1513.28 l
S
newpath
2570.44 1510.78 m
2580.27 1519.28 l
2578.99 1513.59 l
2583.40 1509.78 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
2590.39 1506.36 m
4402.72 2096.17 l
S
newpath
4410.32 2098.64 m
4400.46 2090.17 l
4401.76 2095.86 l
4397.36 2099.68 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4451.71 2082.04 m
3034.54 691.965 l
S
newpath
3028.83 686.363 m
3033.90 698.335 l
3035.26 692.665 l
3040.90 691.196 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
3042.26 685.395 m
4462.49 2072.51 l
S
newpath
4468.21 2078.10 m
4463.12 2066.14 l
4461.77 2071.81 l
4456.13 2073.29 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4662.51 2184.65 m
6396.96 2677.11 l
S
newpath
6404.66 2679.30 m
6394.48 2671.21 l
6396.00 2676.84 l
6391.75 2680.83 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4453.41 2211.84 m
2520.65 3879.00 l
S
newpath
2514.59 3884.22 m
2526.94 3880.17 l
2521.41 3878.35 l
2520.41 3872.60 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4453.34 2211.82 m
2705.18 3718.07 l
S
newpath
2699.12 3723.30 m
2711.47 3719.25 l
2705.94 3717.42 l
2704.95 3711.68 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4588.88 2077.96 m
5859.27 621.682 l
S
newpath
5864.53 615.654 m
5852.87 621.410 l
5858.61 622.436 l
5860.41 627.983 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4679.08 2165.52 m
6436.08 2385.63 l
S
newpath
6444.02 2386.62 m
6432.74 2380.17 l
6435.09 2385.50 l
6431.49 2390.09 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4574.46 2075.45 m
5625.08 432.039 l
S
newpath
5629.39 425.298 m
5618.72 432.716 l
5624.55 432.881 l
5627.14 438.102 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4437.11 2206.82 m
1269.42 4280.82 l
S
newpath
1262.73 4285.20 m
1275.51 4282.81 l
1270.26 4280.27 l
1270.03 4274.45 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4503.06 2073.21 m
3837.55 180.499 l
S
newpath
3834.90 172.951 m
3834.16 185.931 l
3837.89 181.442 l
3843.60 182.614 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4614.34 2084.48 m
6153.60 963.182 l
S
newpath
6160.06 958.472 m
6147.42 961.496 l
6152.79 963.771 l
6153.31 969.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4520.83 2072.27 m
4304.56 80.2763 l
S
newpath
4303.70 72.3230 m
4300.03 84.7925 l
4304.67 81.2705 l
4309.97 83.7134 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4376.20 2133.41 m
2534.21 1972.91 l
S
newpath
2526.24 1972.21 m
2537.76 1978.23 l
2535.21 1972.99 l
2538.63 1968.27 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4674.20 2120.51 m
6438.59 1802.33 l
S
newpath
6446.46 1800.91 m
6433.76 1798.12 l
6437.60 1802.51 l
6435.54 1807.96 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4655.36 2103.50 m
6392.36 1509.89 l
S
newpath
6399.93 1507.30 m
6386.96 1506.45 l
6391.42 1510.21 l
6390.19 1515.91 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4630.68 2202.99 m
6242.35 3094.16 l
S
newpath
6249.35 3098.03 m
6241.27 3087.85 l
6241.47 3093.68 l
6236.43 3096.60 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4623.98 2087.79 m
6225.00 1095.62 l
S
newpath
6231.80 1091.40 m
6218.96 1093.47 l
6224.15 1096.14 l
6224.23 1101.97 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4634.19 2091.94 m
6296.27 1227.28 l
S
newpath
6303.36 1223.59 m
6290.41 1224.69 l
6295.38 1227.74 l
6295.03 1233.57 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4605.27 2081.82 m
6061.06 844.618 l
S
newpath
6067.16 839.437 m
6054.78 843.398 l
6060.30 845.265 l
6061.25 851.018 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4390.62 2112.87 m
2557.83 1664.33 l
S
newpath
2550.06 1662.43 m
2560.52 1670.14 l
2558.80 1664.57 l
2562.90 1660.43 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4438.92 2207.44 m
1471.91 4209.90 l
S
newpath
1465.28 4214.37 m
1478.03 4211.80 l
1472.74 4209.34 l
1472.43 4203.51 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4543.94 2072.52 m
4939.05 122.376 l
S
newpath
4940.64 114.536 m
4933.36 125.304 l
4938.85 123.356 l
4943.16 127.289 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4432.60 2088.26 m
2760.89 1073.58 l
S
newpath
2754.05 1069.43 m
2761.71 1079.93 l
2761.74 1074.10 l
2766.90 1071.39 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4665.44 2111.27 m
6420.48 1655.66 l
S
newpath
6428.22 1653.65 m
6415.35 1651.83 l
6419.51 1655.91 l
6417.86 1661.51 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4596.81 2079.68 m
5969.79 724.399 l
S
newpath
5975.48 718.779 m
5963.43 723.651 l
5969.07 725.102 l
5970.45 730.767 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4581.46 2076.58 m
5750.45 516.605 l
S
newpath
5755.24 510.203 m
5744.05 516.807 l
5749.85 517.405 l
5752.05 522.804 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4680.64 2131.05 m
6450.32 1948.35 l
S
newpath
6458.27 1947.53 m
6445.82 1943.79 l
6449.32 1948.46 l
6446.85 1953.74 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4644.74 2097.10 m
6346.05 1368.47 l
S
newpath
6353.40 1365.32 m
6340.40 1365.45 l
6345.13 1368.86 l
6344.34 1374.64 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4567.84 2074.56 m
5501.39 344.565 l
S
newpath
5505.19 337.525 m
5495.09 345.711 l
5500.92 345.445 l
5503.89 350.460 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4532.31 2072.19 m
4623.50 76.1150 l
S
newpath
4623.86 68.1233 m
4618.32 79.8828 l
4623.45 77.1139 l
4628.31 80.3388 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4555.48 2073.27 m
5228.77 212.166 l
S
newpath
5231.49 204.643 m
5222.71 214.227 l
5228.43 213.107 l
5232.11 217.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4411.40 2098.02 m
2632.61 1360.90 l
S
newpath
2625.22 1357.83 m
2634.39 1367.05 l
2633.54 1361.28 l
2638.22 1357.81 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4509.12 2072.78 m
3990.36 134.759 l
S
newpath
3988.30 127.031 m
3986.57 139.915 l
3990.62 135.725 l
3996.23 137.330 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4496.81 2073.78 m
3688.92 238.220 l
S
newpath
3685.70 230.897 m
3685.96 243.895 l
3689.32 239.135 l
3695.11 239.867 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4451.81 2082.02 m
2937.18 811.154 l
S
newpath
2931.05 806.012 m
2937.03 817.555 l
2937.94 811.797 l
2943.45 809.895 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4483.48 2075.44 m
3408.02 388.104 l
S
newpath
3403.72 381.358 m
3405.96 394.164 l
3408.56 388.947 l
3414.39 388.790 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4468.65 2078.02 m
3155.10 580.691 l
S
newpath
3149.83 574.678 m
3153.98 586.996 l
3155.76 581.443 l
3161.50 580.401 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4783.18 85.0453 m
4539.06 2064.36 l
S
newpath
4538.08 2072.30 m
4544.51 2061.00 l
4539.19 2063.37 l
4534.59 2059.78 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4380.27 2168.17 m
2547.60 2432.73 l
S
newpath
2539.68 2433.87 m
2552.27 2437.11 l
2548.59 2432.59 l
2550.84 2427.21 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4442.50 2084.79 m
2843.42 938.785 l
S
newpath
2836.92 934.125 m
2843.76 945.179 l
2844.24 939.368 l
2849.59 937.051 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4375.18 2156.95 m
2538.32 2279.30 l
S
newpath
2530.33 2279.83 m
2542.64 2284.02 l
2539.31 2279.23 l
2541.98 2274.05 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
4463.70 63.8739 m
4526.32 2064.18 l
S
newpath
4526.57 2072.18 m
4531.20 2060.03 l
4526.29 2063.18 l
4521.20 2060.34 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4382.12 2122.50 m
2540.59 1818.69 l
S
newpath
2532.69 1817.39 m
2543.72 1824.28 l
2541.57 1818.86 l
2545.35 1814.41 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4683.32 2154.23 m
6449.50 2240.25 l
S
newpath
6457.49 2240.64 m
6445.74 2235.07 l
6448.50 2240.21 l
6445.26 2245.05 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4373.74 2145.12 m
2534.45 2126.27 l
S
newpath
2526.45 2126.19 m
2538.40 2131.31 l
2535.45 2126.28 l
2538.50 2121.31 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4652.09 2192.06 m
6355.89 2819.27 l
S
newpath
6363.39 2822.03 m
6353.86 2813.20 l
6354.95 2818.92 l
6350.41 2822.58 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4422.17 2092.60 m
2690.36 1214.63 l
S
newpath
2683.22 1211.01 m
2691.67 1220.90 l
2691.25 1215.08 l
2696.19 1211.98 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4587.27 2215.78 m
5679.50 3750.07 l
S
newpath
5684.14 3756.59 m
5681.25 3743.91 l
5678.92 3749.26 l
5673.10 3749.71 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
5672.53 3757.71 m
4576.50 2224.83 l
S
newpath
4571.85 2218.32 m
4574.76 2230.99 l
4577.08 2225.64 l
4582.90 2225.17 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
6091.34 3353.32 m
4617.20 2214.90 l
S
newpath
4610.87 2210.01 m
4617.31 2221.30 l
4617.99 2215.51 l
4623.42 2213.39 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4482.79 2075.55 m
3539.82 307.762 l
S
newpath
3536.05 300.703 m
3537.29 313.645 l
3540.29 308.644 l
3546.11 308.938 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
3547.21 300.274 m
4493.57 2066.66 l
S
newpath
4497.35 2073.71 m
4496.09 2060.77 l
4493.10 2065.78 l
4487.27 2065.50 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4476.28 2076.59 m
3277.62 479.336 l
S
newpath
3272.82 472.938 m
3276.02 485.537 l
3278.22 480.136 l
3284.02 479.534 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4524.47 2221.22 m
4409.89 4145.90 l
S
newpath
4409.42 4153.89 m
4415.12 4142.20 l
4409.95 4144.90 l
4405.14 4141.61 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
2792.23 3182.04 m
4424.67 2208.85 l
S
newpath
4431.54 2204.76 m
4418.67 2206.61 l
4423.81 2209.37 l
4423.79 2215.20 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4555.72 2220.13 m
5201.13 3987.57 l
S
newpath
5203.88 3995.09 m
5204.46 3982.10 l
5200.79 3986.64 l
5195.06 3985.53 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
4547.38 2220.72 m
5004.36 4051.24 l
S
newpath
5006.30 4059.01 m
5008.24 4046.15 l
5004.12 4050.27 l
4998.54 4048.57 l
h
f
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4538.37 2221.11 m
4776.88 4096.08 l
S
newpath
4777.89 4104.02 m
4781.34 4091.48 l
4776.76 4095.09 l
4771.42 4092.75 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4528.79 2221.25 m
4525.74 4118.44 l
S
newpath
4525.73 4126.44 m
4530.75 4114.45 l
4525.75 4117.44 l
4520.75 4114.43 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4520.07 2221.13 m
4295.92 4109.31 l
S
newpath
4294.98 4117.26 m
4301.36 4105.93 l
4296.04 4108.32 l
4291.43 4104.75 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4499.90 2219.94 m
3797.07 3994.52 l
S
newpath
3794.13 4001.96 m
3803.19 3992.64 l
3797.44 3993.59 l
3793.90 3988.96 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
4477.76 2217.09 m
3352.98 3764.69 l
S
newpath
3348.28 3771.16 m
3359.38 3764.39 l
3353.57 3763.88 l
3351.29 3758.51 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
